%{

%}
%union{
	int     entier;
	float   reel;
	char*   string;
}

%token PARENTESE_OUVRANTE PARENTESE_FERMANTE ACOLADE_OUVRANTE ACOLADE_FERMANTE VRG DEUX_POINTS POINT
%token MC_IMPORT AS NUMPY MATPLOTLIB FOR IN RANGE IF ELSE ELIF 
%token DEF
%token <string>IDF <entier>VAL_INT <reel>VAL_FLOAT <string>VAL_CHAR <string>VAL_STRING  
%token INT FLOAT CHAR BOOL 
%token PLUS MOIN MULTI DIVISION AND OR NOT INF SUP INF_EGALE SUP_EGALE EGALE_EGALE NOT_EGALE EGALE POURCENT EGUALE 
%token COMM

%left SUP SUP_EGALE EGALE INF_EGALE INF
%left PLUS MOIN
%left MULTI DIVISION
%left AND
%left OR NOT

%right PARENTESE_OUVRANTE PARENTESE_FERMANTE

%%

S: IMPORT DECLARTION TEST TEST TEST TEST { printf("programe correct syntaxiquement"); YYACCEPT;};

IMPORT: MC_IMPORT LIB AS IDF
LIB:    NUMPY | MATPLOTLIB

DECLARTION: IDF EGALE VAL
VAL: IDF
TEST : IF|ELSE|ELIF|DEF

%%

main(){ 
    yyparse();
    yywrap();
}
